---
type PostCardData = {
  slug: string;
  title: string;
  description: string;
  published: Date;
  tags: string[];
};

const { post } = Astro.props as {
  post: PostCardData;
};

const { slug, title, description, published, tags } = post;
const publishedDate = published.toLocaleDateString(undefined, {
  month: 'short',
  day: 'numeric',
  year: 'numeric',
});
---

<article class="flex flex-col gap-3 rounded-2xl border border-[color:var(--color-border)] bg-[color:var(--color-surface)] p-5 transition hover:border-[color:var(--color-accent)] focus-within:border-[color:var(--color-accent)]">
  <header class="space-y-1">
    <p class="text-xs uppercase tracking-wide text-[color:var(--color-text-muted)]">{publishedDate}</p>
    <h3 class="text-lg font-semibold text-[color:var(--color-text)]">
      <a class="transition-colors duration-150 text-[color:var(--color-text)] hover:text-[color:var(--color-accent)] focus-visible:text-[color:var(--color-accent)]" href={`/posts/${slug}`}>
        {title}
      </a>
    </h3>
  </header>
  <p class="text-sm text-[color:var(--color-text-muted)]">{description}</p>
  {tags.length > 0 && (
    <ul class="mt-auto flex flex-wrap gap-2 text-xs uppercase tracking-wide text-[color:var(--color-text-muted)]">
      {tags.map((tag) => (
        <li class="rounded-full border border-[color:var(--color-border)] px-3 py-1">{tag}</li>
      ))}
    </ul>
  )}
</article>
